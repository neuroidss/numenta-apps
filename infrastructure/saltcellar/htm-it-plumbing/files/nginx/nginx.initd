#!/bin/sh
#
# nginx        Startup script for nginx
#
# chkconfig: - 99 15
# processname: nginx
# config: /etc/nginx/nginx.conf
# config: /etc/sysconfig/nginx
# pidfile: /var/run/nginx.pid
# description: nginx is an HTTP and reverse proxy server
#
### BEGIN INIT INFO
# Provides: nginx
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop nginx
### END INIT INFO

if [ $(/usr/bin/id -u) -ne 0 ]; then
    echo "You are not root"
    exit 1
fi

# Source function library.
. /etc/rc.d/init.d/functions

if [ -f /etc/sysconfig/nginx ]; then
    . /etc/sysconfig/nginx
fi

# We don't want to use the system nginx.conf - we want to use the
# htm-it-api.conf installed as part of htm-it app

HTM_IT_HOME=/opt/numenta/htm.it
HTM_IT_NGINX_CONF=conf/htm-it-api.conf
NGINX_MAINT_CONF=conf/nginx-maint.conf

prog=nginx
nginx=/usr/sbin/nginx

conffile=${CONFFILE-/etc/nginx/nginx.conf}
lockfile=${LOCKFILE-/var/lock/subsys/nginx}
pidfile=${PIDFILE-/var/run/nginx.pid}

SLEEPMSEC=100000
RETVAL=0

htm_it_loading() {
  logger -t htm-it-nginx "nginx: loading"
  echo -n $"Starting ${prog}: "

  daemon --pidfile="${pidfile}" "${nginx}" -c "${conffile}"
  RETVAL=$?
  echo
  [ "${RETVAL}" = 0 ] && touch "${lockfile}"
  return "${RETVAL}"
}

start() {
  cd "${HTM_IT_HOME}"
  logger -t htm-it-nginx "nginx: starting"
  echo -n $"Starting ${prog}: "
  "${nginx}" -p . -c "${HTM_IT_HOME}/${HTM_IT_NGINX_CONF}"
  RETVAL=$?
  echo
  [ "${RETVAL}" = 0 ] && touch "${lockfile}"
  return "${RETVAL}"
}

stop() {
    cd "${HTM_IT_HOME}"
    logger -t htm-it-nginx "nginx: stopping"
    echo -n $"Stopping ${prog}: "
    killproc -p "${pidfile}" "${prog}"
    RETVAL=$?
    echo
    [ "${RETVAL}" = 0 ] && rm -f "${lockfile}" "${pidfile}"
}

start_maintenance() {
  stop
  cd "${HTM_IT_HOME}"
  logger -t htm-it-nginx "nginx: start_maintenance"
  echo -n $"Starting ${prog}: "
  "${nginx}" -p . -c "${HTM_IT_HOME}/${NGINX_MAINT_CONF}"
  RETVAL=$?
  echo
  [ "${RETVAL}" = 0 ] && touch "${lockfile}"
  return "${RETVAL}"
}

reload() {
    cd "${HTM_IT_HOME}"
    logger -t htm-it-nginx "nginx: reloading"
    echo -n $"Reloading ${prog}: "
    killproc -p "${pidfile}" "${prog}" -HUP
    RETVAL=$?
    echo
}

configtest() {
    logger -t htm-it-nginx "nginx: configtest"
    nginx -c "${HTM_IT_HOME}/${HTM_IT_NGINX_CONF}" -t
}

rh_status() {
    cd "${HTM_IT_HOME}"
    logger -t htm-it-nginx "nginx: rh_status"
    status -p "${pidfile}" "${nginx}"
}

# See how we were called.
case "$1" in
    start)
        rh_status >/dev/null 2>&1 && exit 0
        start
        ;;
    stop)
        stop
        ;;
    start_maintenance)
        start_maintenance
        ;;
    start_maintainance)
        start_maintenance
        ;;
    status)
        rh_status
        RETVAL=$?
        ;;
    restart)
        # configtest -q || exit $RETVAL
        stop
        start
        ;;
    upgrade)
        upgrade
        ;;
    condrestart|try-restart)
        if rh_status >/dev/null 2>&1; then
            stop
            start
        fi
        ;;
    force-reload|reload)
        reload
        ;;
    configtest)
        configtest
        ;;
    *)
        echo $"Usage: ${prog} {start|stop|start_maintenance|stop|restart|condrestart|try-restart|force-reload|upgrade|reload|status|help|configtest}"
        RETVAL=2
esac

exit "${RETVAL}"

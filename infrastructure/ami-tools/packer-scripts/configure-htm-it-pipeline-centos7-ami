#!/usr/bin/env bash
# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from
# Numenta, Inc. a separate commercial license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------

set -o errexit
set -o pipefail

NUMENTA=/opt/numenta
PRODUCTS="${NUMENTA}/numenta-apps"
HTM_IT_HOME="${PRODUCTS}/htm.it"

splat() {
  # Make it easier to distinguish phases of the script in the scrollback
  echo "


.                                    ######
.                                  ##########
.                                 ############
.                                ##############
.                                ##############
.                                ##############
.                                 ############
.                                  ##########
.                                    ######


  "
}

install-prerequisites-and-update-repos() {
  splat

  echo "Installing devtools, mysql, and rabbit"
  # Install base centos packages
  sudo yum install gcc gcc-c++ -y
  sudo rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm
  sudo yum -y install python-pip python-devel libxml2-devel libxslt-devel

  # Install MySQL, Nginx and Rabbit
  sudo rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
  sudo yum install mysql-server mysql mariadb-devel nginx git -y
  curl -O https://www.rabbitmq.com/releases/rabbitmq-server/v3.5.4/rabbitmq-server-3.5.4-1.noarch.rpm
  sudo rpm --import https://www.rabbitmq.com/rabbitmq-signing-key-public.asc
  sudo yum install rabbitmq-server-3.5.4-1.noarch.rpm -y
  sudo /usr/lib/rabbitmq/bin/rabbitmq-plugins enable rabbitmq_management
  pushd /usr/local/bin
    sudo curl -O https://raw.githubusercontent.com/rabbitmq/rabbitmq-management/rabbitmq_v3_5_4/bin/rabbitmqadmin
    sudo chmod 0755 rabbitmqadmin
  popd

  # Create folders with appropriate permissions
  for folder in "${NUMENTA}" \
    "${NUMENTA}/bin" \
    "${NUMENTA}/lib/python2.7/site-packages" \
    /etc/htm.it
  do
    sudo mkdir -p "${folder}"
    sudo chown -R centos:centos "${folder}"
  done

  # Add www-data user for nginx
  sudo groupadd -g 502 www-data
  sudo useradd -u 502 -g 502 -m www-data
}

configure-private-settings() {
  splat

  echo "Write private settings from env vars to private-settings.sh file"

  if [ -f /etc/htm.it/private-settings.sh ]; then
    sudo rm -f /etc/htm.it/private-settings.sh
  fi

  echo "# Configure S3 credentials for log uploading
    export LOG_UPLOADER_S3_ACCESS_KEY_ID=${LOG_UPLOADER_S3_ACCESS_KEY_ID}
    export LOG_UPLOADER_S3_SECRET_ACCESS_KEY=${LOG_UPLOADER_S3_SECRET_ACCESS_KEY}

    # Configure Wufoo
    export WUFOO_URL=${WUFOO_URL}
    export WUFOO_USER=${WUFOO_USER}

    # Configure notifications
    export NOTIFICATIONS_AWS_ACCESS_KEY_ID=${NOTIFICATIONS_AWS_ACCESS_KEY_ID}
    export NOTIFICATIONS_AWS_SECRET_ACCESS_KEY=${NOTIFICATIONS_AWS_SECRET_ACCESS_KEY}
    export NOTIFICATIONS_SENDER_EMAIL=${NOTIFICATIONS_SENDER_EMAIL}
    " >> /etc/htm.it/private-settings.sh
}

install-htm-it() {
  splat

  echo "Installing HTM-IT"

  # Install HTM-IT pre-requisites
  pip install paver==1.2.4 agamotto==0.5.1 --target "${NUMENTA}/lib/python2.7/site-packages"
  pip install uwsgi==2.0.4 --install-option="--prefix=${NUMENTA}"

  # Clone Numenta Apps Repo
  cd "${NUMENTA}"
  git clone "${GIT_REMOTE}"
  cd "${PRODUCTS}"
  git checkout "${GIT_BRANCH}"
  git reset --hard "${GIT_COMMIT_SHA}"

  echo "Creating symlink to ${NUMENTA}/htm.it"
  ln -s "${HTM_IT_HOME}" "${NUMENTA}/htm.it"
  echo "Creating log dir"
  mkdir -p "${HTM_IT_HOME}/logs"

  echo "Creating symlink for supervisord.vars"
  ln -s "${HTM_IT_HOME}/supervisord.vars" /etc/htm.it/
  echo "Enabling wufoo"
  touch /etc/htm.it/enable_wufoo
  echo "Sourcing supervisord.vars..."
  source /etc/htm.it/supervisord.vars

  BOOTSCRIPTS_D="${PRODUCTS}/infrastructure/ami-tools/boot-scripts/centos7"

  for file in firstboot.sh \
    firstboot-root.sh \
    set-mysql-root-password \
    wait-until-network-up \
    shuffle_htm_it_logs \
    htm_it_log_rotator \
    lockrun
  do
    echo "Creating symlink for ${file}"
    sudo ln -s "${BOOTSCRIPTS_D}/${file}" /usr/local/sbin/
  done

  for file in htm-it-services htm-it-preload
  do
    echo "Creating symlink for ${file} init script"
    sudo ln -s "${BOOTSCRIPTS_D}/${file}" /etc/init.d/
  done

  for service in htm-it-error.service \
    htm-it-loading.service \
    htm-it-preload.service \
    htm-it-stopped.service \
    htm-it-services-tickle.service
  do
    echo "Creating symlink for ${service} systemd script"
    sudo ln -s "${BOOTSCRIPTS_D}/${service}" /etc/systemd/system/
  done

  # NOTE: Per https://bugzilla.redhat.com/show_bug.cgi?id=955379 we need to use
  # the absolute path to the file instead of the symlink in /etc/systemd to
  # enable the services
  echo "Enabling htm-it-services.service to start at boot"
  sudo systemctl enable "${BOOTSCRIPTS_D}/htm-it-services.service"

  sudo systemctl daemon-reload

  echo "Creating symlink for supervisord-helper"
  ln -s "${BOOTSCRIPTS_D}/supervisord-helper" "${NUMENTA}"

  echo "Creating symlink for prehtm-it.html"
  sudo mkdir -p /usr/share/nginx/html/
  sudo ln -s "${BOOTSCRIPTS_D}/prehtm-it.html" /usr/share/nginx/html/

  cd "${PRODUCTS}"
  ./install-htm-it.sh "${NUMENTA}"
}

bootstrap-htm-it() {
  splat

  echo "Bootstrap HTM-IT"
  # Increase max connections for HTM-IT
  sudo sysctl -w net.core.somaxconn=1024
  echo "net.core.somaxconn=1024" | sudo tee -a /etc/sysctl.conf

  cd "${HTM_IT_HOME}"
  mkdir -p "${HTM_IT_LOG_DIR}"/
}

install-prerequisites-and-update-repos
configure-private-settings
install-htm-it
bootstrap-htm-it

#!/bin/bash
# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from
# Numenta, Inc. a separate commercial license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------
#
# This script configures an Infrastructure AMI candidate by installing
# the infrastructure repositories and base salt formulas.

echo "Marking instance as being an Infrastructure AMI build..."
AMIBUILD_LOCK=/tmp/baking-ami
touch "${AMIBUILD_LOCK}"

echo "Installing Numenta repositories..."
sudo mv /tmp/nta-carbonite.repo /etc/yum.repos.d
sudo mv /tmp/nta-thirdparty.repo /etc/yum.repos.d
sudo mv /tmp/secretsauce.repo /etc/yum.repos.d

echo "Installing mysql community repository..."
sudo rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
sudo yum install mysql-server mysql mariadb-devel -y

# Use /usr/bin/pip so this is visible to salt or instances won't be able to
# create MySQL users or grant privileges to them.
/usr/bin/pip install mysql-python

echo "Cleaning yum..."
sudo yum clean all

echo
echo "**********"
echo "Updating yum"
sudo yum update -y

echo "Old minion_id"
sudo cat /etc/salt/minion_id

echo "Stopping Salt..."
sudo service salt-minion stop

echo "Salt minion_id: $(cat /etc/salt/minion_id)"

echo
echo "Running Salt..."
sudo salt-call state.highstate
saltcode=$?

if [ "${saltcode}" != 0 ]; then
  sleep 15
  echo "RETRY FAILED SALT RUN"
  sudo salt-call state.highstate
  saltcode=$?
fi

echo
echo "Salt run return code: ${saltcode}"
exit "${saltcode}"

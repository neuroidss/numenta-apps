#!/bin/bash
# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from
# Numenta, Inc. a separate commercial license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------
#
# This script configures an Infrastructure AMI candidate by installing
# the infrastructure repositories and base salt formulas.

echo "Marking instance as being an Infrastructure AMI build..."
AMIBUILD_LOCK=/tmp/baking-ami
touch "${AMIBUILD_LOCK}"

complain() {
  echo "$@"
  logger -t ami-bake "$@"
}

echo "Installing Numenta repositories..."
mv /tmp/nta-carbonite.repo /etc/yum.repos.d
mv /tmp/nta-thirdparty.repo /etc/yum.repos.d
mv /tmp/secretsauce.repo /etc/yum.repos.d

echo "Cleaning yum..."
yum clean all

# Ensure we have the latest glibc to protect against the GHOST vulnerability
echo "Updating glibc"
yum install -y glibc

echo
echo "**********"
echo "Updating yum"
time yum update -y

echo "Old minion_id"
cat /etc/salt/minion_id

echo "Stopping Salt..."
service salt-minion stop

echo "Setting search list in /etc/resolv.conf to numenta.com"
sed 's/^search .*/search numenta.com/g' /etc/resolv.conf -i''
cat /etc/resolv.conf
host salt.numenta.com

echo "Configuring Salt minion_id"
echo
echo "Setting Salt minion_id: $(cat /tmp/infrastructure_minion_id)"
cat /tmp/infrastructure_minion_id > /etc/salt/minion_id

echo "Setting salt master name"
sed 's/^#master:/master: salt.numenta.com/g' /etc/salt/minion -i''
grep ^master: /etc/salt/minion
retcode="$?"
if [ "${retcode}" != "0" ]; then
  echo "Failed to set salt master name"
  echo "Check for changes to default /etc/salt/minion"
  exit "${retcode}"
fi

echo "Purging salt minion key data..."
rm -fr /etc/salt/pki/minion/*

echo "Restarting salt minion..."
service salt-minion restart

echo "Wait for master to sign key..."
sleep 10

# echo
# echo "Test salt config"
# salt-call state.highstate test=True

echo
echo "Running Salt..."
salt-call state.highstate
saltcode=$?

if [ "${saltcode}" != 0 ]; then
  sleep 15
  echo "RETRY FAILED SALT RUN"
  salt-call state.highstate
  saltcode=$?
fi

echo
echo "Salt run return code: ${saltcode}"
exit "${saltcode}"
